# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/02_national/99_util/04_SymLinks.ipynb.

# %% auto 0
__all__ = ['first_hundred', 'lib_name', 'source_path', 'is_valid_dir', 'generate']

# %% ../../nbs/02_national/99_util/04_SymLinks.ipynb 2
from pathlib import Path
import os

# %% ../../nbs/02_national/99_util/04_SymLinks.ipynb 3
first_hundred = [f"{x:02}" for x in range(100)]

def is_valid_dir(name):

    if len(name) < 4:
        return False
    if name[:2] not in first_hundred:
        return False
    if name[-6:] == '.ipynb':
        return False

    return True

# %% ../../nbs/02_national/99_util/04_SymLinks.ipynb 4
lib_name ='national'
source_path = os.path.join('/','wd',lib_name, lib_name)


def generate(_dir):
    sym_path = os.path.join(_dir,lib_name)
    if os.path.islink(sym_path):
        os.system(f"rm {sym_path}")
    if os.path.islink(sym_path+'_ss'):
        os.system(f"rm {sym_path+'_ss'}")
    
    os.symlink(source_path,sym_path, target_is_directory=True)


    subdirs = [
        os.path.join(_dir, y) for y in os.listdir(_dir) if is_valid_dir(y)

        ]

    for x in os.listdir(_dir):

        if not is_valid_dir(x):
            continue
        
        child_dir = os.path.join(_dir,x)
        if not os.path.isdir(child_dir):
            continue


        generate(child_dir)
