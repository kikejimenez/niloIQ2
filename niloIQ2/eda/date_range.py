# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/02_national/02_EDA/05_PriceAndDateRanges.ipynb.

# %% auto 0
__all__ = ['min_max_diff', 'get_time_frame_info']

# %% ../../nbs/02_national/02_EDA/05_PriceAndDateRanges.ipynb 2
from pathlib import Path
import pandas as pd


# %% ../../nbs/02_national/02_EDA/05_PriceAndDateRanges.ipynb 3
def min_max_diff(
    data: pd.DataFrame,
    col_name: str,
):
    """ 
    Given a dataframe and the name of a column with datetime information it gives the starting and finishing dates with 
    the total of days in the time ??frame.
    
    :param data: A pandas dataframe with date information
    :param date_column: The name of a column with time information. Expected in format YYYY-mm-dd
    return: Print a summary of starting and finishing date with the days elapsed in the period
    
    """

    df = data[col_name]

    _min = df.min()
    _max = df.max()
    _range = _max - _min
    
    return _min,_max, _range

# %% ../../nbs/02_national/02_EDA/05_PriceAndDateRanges.ipynb 4
def get_time_frame_info(
    data: pd.DataFrame,
    date_column: str,
):
    """ 
    Given a dataframe and the name of a column with datetime information it gives the starting and finishing dates with 
    the total of days in the time frame.
    
    :param data: A pandas dataframe with date information
    :param date_column: The name of a column with time information. Expected in format YYYY-mm-dd
    return: Print a summary of starting and finishing date with the days elapsed in the period
    
    """

    min_date, max_date, range_date = min_max_diff(data,date_column)
    print(
        f"The time frame starts on {min_date.strftime('%Y-%m-%d')} and conclude on {max_date.strftime('%Y-%m-%d')}. A total of {range_date.days} days"
    )
