# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/02_national/05_Experiments/09_darts/02_Model.ipynb.

# %% auto 0
__all__ = ['DartsModel', 'Evaluation', 'Results', 'Model', 'Models']

# %% ../../../nbs/02_national/05_Experiments/09_darts/02_Model.ipynb 2
from typing import Optional

from darts.models import (
    NaiveSeasonal,
    NaiveDrift,
    Prophet,
    ExponentialSmoothing,
    ARIMA,
    AutoARIMA,
    RegressionEnsembleModel,
    RegressionModel,
    Theta,
    FFT,
)

from darts.models import (
    RNNModel,
    TCNModel,
    TransformerModel,
    NBEATSModel,
    BlockRNNModel,
)

from national.util import constants

from IPython.display import display, Markdown

# %% ../../../nbs/02_national/05_Experiments/09_darts/02_Model.ipynb 4
DartsModel: type = type(Prophet)
#MerlionConfig: type = type(ArimaConfig)

# %% ../../../nbs/02_national/05_Experiments/09_darts/02_Model.ipynb 5
class Evaluation:

    def __init_(self):
        ...


class Results:

    def __init__(self):
        ...

# %% ../../../nbs/02_national/05_Experiments/09_darts/02_Model.ipynb 6
class Model:
    """All models are initialized using the syntax ModelClass(config),
where config is a model-specific configuration object.
This is where you specify any algorithm-specific hyperparameters,
as well as any data pre-processing transforms.
    """

    def __init__(
        self,
        model,
        **args,
    ):
        self.params: dict = None
        self.model: DartsModel = None
     

# %% ../../../nbs/02_national/05_Experiments/09_darts/02_Model.ipynb 7
class Models:
    """
"""


    
    n_beat_default_args = dict(
            input_chunk_length=24,
            output_chunk_length=12,
            n_epochs=100,
            random_state=0,
        )

    def __init__(self,
     n_beat_args: dict = n_beat_default_args,
     ):
        

        self.n_beats_model = NBEATSModel(**n_beat_args)
        
