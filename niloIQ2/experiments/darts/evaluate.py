# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/02_national/05_Experiments/09_darts/06_Evaluate.ipynb.

# %% auto 0
__all__ = ['Evaluation', 'Evaluate']

# %% ../../../nbs/02_national/05_Experiments/09_darts/06_Evaluate.ipynb 2
from typing import Optional
import logging
import sys


from national.experiments.darts import metrics
from national.experiments.darts.predict import Predict,Predictions
from national.util.constants import PERCENTAGE_CONFIDENCE_INTERVAL

# %% ../../../nbs/02_national/05_Experiments/09_darts/06_Evaluate.ipynb 3
logging.disable(sys.maxsize)

# %% ../../../nbs/02_national/05_Experiments/09_darts/06_Evaluate.ipynb 4
class Evaluation:
    def __init__(
        self,
        metric,
        actual_series,
        predictions: Predictions,
    ) -> None:
    
        self.n_beats = metric(actual_series,predictions.n_beats)

# %% ../../../nbs/02_national/05_Experiments/09_darts/06_Evaluate.ipynb 5
class Evaluate:
    def __init__(
        self,
        preds: Optional[Predict] = None,
    ):
        self.mape = self.all_models_one_metric(metrics.darts_metrics.mape)

        self.rmspe = self.all_models_one_metric(metric=metrics.rmspe)

        self.rrmse = self.all_models_one_metric(metrics.rrmse)

    def all_models_one_metric(
        self,
        metric,
    ) -> float:
        return Evaluation(
            metric=metric,
            actual_series=preds.data.val,
            predictions=preds.predictions,
        )
